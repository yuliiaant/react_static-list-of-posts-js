{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","id","email","username","className","href","CommentInfo","comment","postId","body","CommentList","comments","length","map","PostInfo","post","title","userId","PostList","posts","postsFromServer","usersFromServer","find","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"k38IAEaA,EAAW,SAAC,GAAD,QAAGC,KAEzBC,GAFsB,EACtBC,GADsB,EAEtBD,MAEAE,GAJsB,EAGtBC,SAHsB,EAItBD,OAJsB,OAMtB,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGF,KCTQM,G,MAAc,SAAC,GAAD,QAAGC,QAG5BP,GAHyB,EACzBQ,OADyB,EAEzBP,GAFyB,EAGzBD,MACAE,EAJyB,EAIzBA,MACAO,EALyB,EAKzBA,KALyB,OAOzB,sBAAKL,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCJ,IAEtC,OAED,mBACEI,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGK,SCnBMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKP,UAAU,cAAf,SACIO,EAASC,OAEPD,EAASE,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAaA,QAASA,OAD/C,mBAAG,UAAQ,oBAAX,gCCDKO,EAAW,SAAC,GAAD,QAAGC,KAGzBC,GAHsB,EACtBf,GADsB,EAEtBgB,OAFsB,EAGtBD,OACAP,EAJsB,EAItBA,KACAV,EALsB,EAKtBA,KACAY,EANsB,EAMtBA,SANsB,OAQtB,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,IAGH,8BACG,eAED,cAAC,EAAD,CAAUjB,KAAMA,UAIpB,mBAAGK,UAAU,iBAAb,SACGK,IAGH,cAAC,EAAD,CAAaE,SAAUA,QC3BdO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKf,UAAU,WAAf,SACGe,EAAMN,KAAI,SAAAE,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,UCUtB,IAAMI,EAAQC,EAAgBP,KAAI,SAAAE,GAAI,kCACjCA,GADiC,IAEpChB,MAVgBkB,EAUDF,EAAKE,OATbI,EAAgBC,MAAK,SAAAvB,GAAI,OAAIA,EAAKE,KAAOgB,MAUhDN,UAPoBH,EAOGO,EAAKd,GANrBsB,EAAmBC,QAAO,SAAAjB,GAAO,OAAIA,EAAQC,SAAWA,QADjE,IAAsBA,EAJJS,KAcLQ,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUe,MAAOA,QCtBrBO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9e8ed4cb.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user: {\n  id,\n  name,\n  username,\n  email,\n} }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","export const CommentInfo = ({ comment: {\n  postId,\n  id,\n  name,\n  email,\n  body,\n} }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {!comments.length\n      ? <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      : comments.map(comment => (<CommentInfo comment={comment} />))\n    }\n  </div>\n);\n","import './PostInfo.scss';\n\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post: {\n  id,\n  userId,\n  title,\n  body,\n  user,\n  comments,\n} }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <CommentList comments={comments} />\n  </div>\n);\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} />))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction findUser(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction findComments(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: findUser(post.userId),\n  comments: findComments(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}